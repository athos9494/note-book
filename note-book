# 预备课学习笔记day 1
    预备课的学习主要分为以下几个模块：终端命令行的简单的了解与使用；
## 关于终端
### 开始之前的问题
    Home目录，Home目录是指登入系统所处的位置，当前用户所处的主目录，通常是用来保存用户的文件，一般使用~表示。
    关于"."和"..":其中“.”表示的是当前的目录；“..”表示的是上一级目录。
    
    command + 空格 打开terminal进入终端
       pwd:(print work directory),显示当前所在的目录，如果想要查找当前工作目录直接在终端输入pwd即可。
       cd:(change directory),用来切换工作目录，cd 不加参数直接切换到Home目录，后面加一个参数则是可以切换到制定的目录。也可以直接cd +文件夹名，直接切换到制定的目录中去。
       ls:（list）查看指定目录下的文件和文件夹。
            ls -a,all 查看所有的文件和文件夹，包括隐藏的文件和文件夹。
            ls -l:long 查看详细的属性。
            ls -h:humanity,友好方式显示
            ahl组合的时候没有顺序要求，例如可以hl也可以lh,二者得出来的结果是一样的。
        文件操作：
            增：（touch）新创建文件。
            删：（rm）remove，rm +文件名直接删除文件
            复制：（cp）copy，复制文件
            移动：（mv）move,移动文件，mv abc def,abc重命名为def,内容不变，名称替代.
            
        目录操作：
            增：mkdir,新建文件夹。
            删：rm -r,删除文件夹。
            复制：cp -r,复制一个文件夹；
            移动：mv,移动文件夹。
        其他：
            mkdir -p可以创建多层文件夹。mkdir -p notice/notice1;可直接在创建notice的同时创建一个notice1 的子文件夹。
            history，可以查看历史命令记录。
            cat，cat +文件名可以直接查看文件内容。
## mac软件管理--brew
    安装遇到的问题：
    Error:Checksum mismatch.
    Error:Failed to install vendor Ruby.
    在进入Users/Mahone/Library/Caches/Homebrew文件夹中删掉该目录文件后运行安装指令安装成功。
    brew常用的指令。
        brew list：查看已经安装的软件
        brew install：安装软件
        brew uninstall：卸载软件
        brew search：查询可供安装的软件。
## 下载编辑器
    这里下载的是sublimme,因为只有这一个编辑器，所以可以直接在终端执行open +文件名的方式在sublime 中打开文件。
## 程序员的最时尚的网站-GitHub
1. 申请账户-直接在官网操作即可.
2. 配置ssh-key
    配置 ssh-key 的目的是为了使用 ssh 方式和 github 服务器建立连接，这样就不用输入用户名和密码。
    如果不确定电脑上有没有别人使用过的ssh-key,可以直接执行
    
    ```
    rm -f ~/.ssh/id_rsa*
    ```
    用来删除别人用过的key.
    
    创建自己的key.直接执行以下命令：
    
   ```
    ssh-keygen -t rsa -b 4096 -C "your_email@example.com"
   ```
    双引号内容改成自己邮箱或者其他的字符串都行；然后根据提示一直回车，不需要设置密码，不然以后每次使用GitHub都需要输入密码。
3. 把创建好的key放到GitHub上。执行以下命令：
    
   ```
   cat ~/.ssh/id_rsa.pub
   ```
   然后复制出现的内容，登陆GitHub网站，在setting中选中SSH and GPG keys,点击New SSH key,在出现的界面中将复制的内容粘贴到key中，再输入自己的title即可。
   最后验证自己的配置是否完成，输入以下命令：
   
   ```
   ssh -T git@github.com
   ```
    如果出现这条语句：
    
    ```
   You've successfully authenticated, but GitHub does not provide shell access.
   ```
   即表示配置成功。
4.   创建项目，这一步是在网页端操作，首页登陆选中左侧Repositories 旁边的新建 New ；
    创建项目的页面填好 Repository Name ，点击 Create repository 按钮，项目就创建好了。然后复制项目的ssh地址。



5. 项目管理:
    
    git clone +复制的ssh地址。将远端GitHub仓库里的目录复制下来，并粘贴在当前文件夹下。cd进入这个目录可以看到有个.git文件，就说明Git仓库已经建立好了。
    
    git add:将修改的本地文件告知gti,并且缓存更改的变更。

    git commit:变更固定下来以后，使用git commit将变更固定下来，同时需要描述此次变更的内容，方便今后快速查找。
    运行
    
   ```
   git commit -m "你想说的话"
   ```
    即可。
    git push:将本地项目同步到服务器，这样就不会丢失项目。
6. GitHub注意事项：
    
    确认你的 home 目录下没有 .git 文件夹:
在终端上运行这两条命令：

   ```
   cd ~
   ls -la | grep "\.git"

   ```

    如果有类似下面的回显：

   ```
   drwxr-xr-x  8 linc linc  4096 Mar 13 08:29 .git
   ```

    说明你的 home 目录被上一个同学放到了 git 中进行管理，请删除这个文件夹：
   ```
   rm -rf .git
   ```
   输入指令：
   
   ```
   git config --global user.name "你的名字,最好用英文字母"
   git config --global user.email "你的邮箱地址"

   ```
   修改自己的用户名和邮箱地址。
   
   如果中文输入出现乱码，可以输入以下指令：
   
   ```
   git config --global core.quotepath=false
   ```
   回车运行即可解决。
   最后通过git status指令,可以随时查看git的状态。






    
